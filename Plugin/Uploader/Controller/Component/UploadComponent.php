<?php

class UploadComponent extends Component {
	
	public function initialize(Controller $controller){
		$this->Controller = $controller;
	}
	
	public function getPathFromToken($token) {
		$token = str_replace(array('/', '\\', DS), array('', '', ''), $token);
		return TMP . 'uploader' . DS . (int) $this->Controller->logged['Member']['big'] . '_' . $token . DS;
	}
	
	/**
	 * Move previously uplaoded file to specified path 
	 * @param array $upload data from form fields (as generated by UploadFormHelper->input())
	 * @param string $new_path path to directory to move the file(s) to
	 * @param string $filename filename if we are uploading only one file, false if we are want to upload multiple files
	 * @return boolean|string|array:string false on failure, filename(s) on success
	 */
	public function upload($upload, $new_path=IMAGES, $filename=false) {
		
		$upload += array(
			'files' => null,
			'token' => null,
		);
		
		if (empty($upload['token'])) {	//token is required
			return false;
		}
		
		if (empty($upload['files'])) {	//filenames to upload are required
			return false;
		}
		
		$files = explode(';', trim($upload['files'], ';'));	//files are as semicolon-separated list
		
		if (empty($files)) {	//we need files
			return false;
		}
		
		$tmp_path = $this->getPathFromToken($upload['token']);	//path to temporary directory
		
		if (!is_dir($new_path)) {	//create new directory if necessary 
			mkdir($new_path, 0777, true);
		}
		
		$uploaded_filenames = array();
		foreach($files as $key=>$file) {
			
			$file = $files[$key];
			
			if (!is_file($tmp_path . $file)) {	//the temporary file must exist
				continue;
			}
			
			if ($filename == false) {	//create new unique filename
				
				do {
					$part = substr($file, strpos($file, '_'));
					$new_filename = uniqid() . $part;
				} while (is_file($new_path . $file));
				
			} else {
				
				if ($key>0 && !isset($filename[$key])) {	//filename not specified for this item
					continue;
				}
				
				$fname = is_array($filename) ? $filename[$key] : $filename;
				
				$ext = substr($file, strrpos($file, '.'));
				$new_filename = $fname . $ext;
				
			}
			
			//move to new directory
			rename(
				$tmp_path . $file, 
				$new_path . $new_filename
			);
			
			$uploaded_filenames[] = $new_filename;	//add new filename to list
			
		}
		
		rmdir_r($tmp_path);	//remove temporary directory
		
		if (empty($uploaded_filenames)) {	//if we moved no files, return false
			return false;
		}
		
		return $uploaded_filenames;	//return array with all uploaded filenames
		
	}
	
	/**
	 * Upload the file to specified location
	 * @param array $uploaded_file from form (name, type, tmp_name, error, size)
	 * @param string $new_path including filename
	 * @return boolean result of the upload
	 */
	public function directUpload($uploaded_file, $new_path) {
		
		//TODO: check uploaded files?
		//throw new UploadException();
		
		$moved = move_uploaded_file($uploaded_file['tmp_name'], $new_path);

		if (!$moved) {
			$moved = rename($uploaded_file['tmp_name'], $new_path);
		}

		return $moved;
		
	}
	
}

class UploadException extends Exception {
}
